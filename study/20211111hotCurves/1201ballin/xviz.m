numFigs = 0;
thisFile = "xviz";
%
vizTime0 = time();
msg( thisFile, __LINE__, "Drawing graphs..." );
%
%
%
numFigs++; figure(numFigs);
n = 1;
cellAry_legend(1,n) = { curveDat(n).strName };
plot( ...
  curveDat(n).matX(1,:), curveDat(n).matX(2,:), ...
  [ curveDat(n).plot_markerStyle, curveDat(n).plot_lineStyle], ...
  'linewidth', curveDat(n).plot_lineWidth, ...
  'color', curveDat(n).plot_color, ...
  'markersize', curveDat(n).plot_markerSize );
hold on;
for n=2:numCurves
	cellAry_legend(1,n) = { curveDat(n).strName };
	plot( ...
	  curveDat(n).matX(1,:), curveDat(n).matX(2,:), ...
	  [ curveDat(n).plot_markerStyle, curveDat(n).plot_lineStyle], ...
	  'linewidth', curveDat(n).plot_lineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_markerSize );
end
legend( cellAry_legend, "location", "northwestoutside" );
for n=1:numCurves
	plot( ...
	  curveDat(n).matX(1,[1,end]), curveDat(n).matX(2,[1,end]), ...
	  curveDat(n).plot_markerStyle, ...
	  'linewidth', curveDat(n).plot_bigLineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_bigMarkerSize );
end
hold off;
title( "Legend" );
grid on;
%
%
%
numFigs++; figure(numFigs);
funchVizLog = @(x)(log( eps025*max(max(x)) + x - min(min(x)) ));
contourf( x1Mesh, x2Mesh, funchVizLog(omegaMesh), contourPlot_numLevels );
colormap( mycmap(contourPlot_numColors) );
xlabel( "x1" );
ylabel( "x2" );
title( "log(omega-omegaMin) vs x1, x2" );
if ( contourPlot_axEq )
	axis equal;
end
hold on;
for n=1:numCurves
	plot( ...
	  curveDat(n).matX(1,:), curveDat(n).matX(2,:), ...
	  [ curveDat(n).plot_markerStyle, curveDat(n).plot_lineStyle], ...
	  'linewidth', curveDat(n).plot_lineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_markerSize );
	plot( ...
	  curveDat(n).matX(1,[1,end]), curveDat(n).matX(2,[1,end]), ...
	  curveDat(n).plot_markerStyle, ...
	  'linewidth', curveDat(n).plot_bigLineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_bigMarkerSize );
end
hold off;
grid on;
%
%
%
numFigs++; figure(numFigs);
n = 1;
loglog( ...
  (1:curveDat(n).numPts), sqrt(curveDat(n).vecOmega), ...
  [ curveDat(n).plot_markerStyle, curveDat(n).plot_lineStyle], ...
  'linewidth', curveDat(n).plot_lineWidth, ...
  'color', curveDat(n).plot_color, ...
  'markersize', curveDat(n).plot_markerSize );
hold on;
loglog( ...
  [ 1, curveDat(n).numPts ], sqrt(curveDat(n).vecOmega([1,end])), ...
  curveDat(n).plot_markerStyle, ...
  'linewidth', curveDat(n).plot_bigLineWidth, ...
  'color', curveDat(n).plot_color, ...
  'markersize', curveDat(n).plot_bigMarkerSize );
for n=2:numCurves
	if ( 1 == curveDat(n).numPts )
		continue;
	end
	loglog( ...
	  (1:curveDat(n).numPts), sqrt(curveDat(n).vecOmega), ...
	  [ curveDat(n).plot_markerStyle, curveDat(n).plot_lineStyle], ...
	  'linewidth', curveDat(n).plot_lineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_markerSize );
	loglog( ...
	  [ 1, curveDat(n).numPts ], sqrt(curveDat(n).vecOmega([1,end])), ...
	  curveDat(n).plot_markerStyle, ...
	  'linewidth', curveDat(n).plot_bigLineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_bigMarkerSize );
end
hold off;
xlabel( "Step index" )
ylabel( "sqrt(omega)" );
title( "sqrt(omega) vs Step index" );
grid on;
%
%
%
numFigs++; figure(numFigs);
n = 1;
semilogy( ...
  curveDat(n).vecDist, sqrt(curveDat(n).vecOmega), ...
  [ curveDat(n).plot_markerStyle, curveDat(n).plot_lineStyle], ...
  'linewidth', curveDat(n).plot_lineWidth, ...
  'color', curveDat(n).plot_color, ...
  'markersize', curveDat(n).plot_markerSize );
hold on;
semilogy( ...
  curveDat(n).vecDist([1,end]), sqrt(curveDat(n).vecOmega([1,end])), ...
  curveDat(n).plot_markerStyle, ...
  'linewidth', curveDat(n).plot_bigLineWidth, ...
  'color', curveDat(n).plot_color, ...
  'markersize', curveDat(n).plot_bigMarkerSize );
for n=2:numCurves
	semilogy( ...
	  curveDat(n).vecDist, sqrt(curveDat(n).vecOmega), ...
	  [ curveDat(n).plot_markerStyle, curveDat(n).plot_lineStyle], ...
	  'linewidth', curveDat(n).plot_lineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_markerSize );
	semilogy( ...
	  curveDat(n).vecDist([1,end]), sqrt(curveDat(n).vecOmega([1,end])), ...
	  curveDat(n).plot_markerStyle, ...
	  'linewidth', curveDat(n).plot_bigLineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_bigMarkerSize );
end
hold off;
xlabel( "Distance from vecX0" )
ylabel( "sqrt(omega)" );
title( "sqrt(omega) vs Distance from vecX0" );
grid on;
%
%
%
numFigs++; figure(numFigs);
n = 1;
semilogx( ...
  (1:curveDat(n).numPts), curveDat(n).vecDist, ...
  [ curveDat(n).plot_markerStyle, curveDat(n).plot_lineStyle], ...
  'linewidth', curveDat(n).plot_lineWidth, ...
  'color', curveDat(n).plot_color, ...
  'markersize', curveDat(n).plot_markerSize );
hold on;
semilogx( ...
  [ 1, curveDat(n).numPts ], curveDat(n).vecDist([1,end]), ...
  curveDat(n).plot_markerStyle, ...
  'linewidth', curveDat(n).plot_bigLineWidth, ...
  'color', curveDat(n).plot_color, ...
  'markersize', curveDat(n).plot_bigMarkerSize );
for n=2:numCurves
	semilogx( ...
	  (1:curveDat(n).numPts), curveDat(n).vecDist, ...
	  [ curveDat(n).plot_markerStyle, curveDat(n).plot_lineStyle], ...
	  'linewidth', curveDat(n).plot_lineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_markerSize );
	semilogx( ...
	  [ 1, curveDat(n).numPts ], curveDat(n).vecDist([1,end]), ...
	  curveDat(n).plot_markerStyle, ...
	  'linewidth', curveDat(n).plot_bigLineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_bigMarkerSize );
end
hold off;
xlabel( "Step index" )
ylabel( "Distance from vecX0" );
title( "Distance from vecX0 vs Step index" );
grid on;
%
%
%
numFigs++; figure(numFigs);
n = 1;
loglog( ...
  (1:curveDat(n).numPts-1), curveDat(n).vecDist_fromEnd(1:end-1), ...
  [ curveDat(n).plot_markerStyle, curveDat(n).plot_lineStyle], ...
  'linewidth', curveDat(n).plot_lineWidth, ...
  'color', curveDat(n).plot_color, ...
  'markersize', curveDat(n).plot_markerSize );
hold on;
loglog( ...
  [ 1, curveDat(n).numPts-1 ], curveDat(n).vecDist_fromEnd([1,end-1]), ...
  curveDat(n).plot_markerStyle, ...
  'linewidth', curveDat(n).plot_bigLineWidth, ...
  'color', curveDat(n).plot_color, ...
  'markersize', curveDat(n).plot_bigMarkerSize );
for n=2:numCurves
	if ( 1 == curveDat(n).numPts )
		continue;
	end
	loglog( ...
	  (1:curveDat(n).numPts-1), curveDat(n).vecDist_fromEnd(1:end-1), ...
	  [ curveDat(n).plot_markerStyle, curveDat(n).plot_lineStyle], ...
	  'linewidth', curveDat(n).plot_lineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_markerSize );
	loglog( ...
	  [ 1, curveDat(n).numPts-1 ], curveDat(n).vecDist_fromEnd([1,end-1]), ...
	  curveDat(n).plot_markerStyle, ...
	  'linewidth', curveDat(n).plot_bigLineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_bigMarkerSize );
end
hold off;
xlabel( "Step index" )
ylabel( "Distance from end" );
title( "Distance from end vs Step index" );
grid on;
%
%
%
numFigs++; figure(numFigs);
n = 1;
loglog( ...
  (1:curveDat(n).numPts-1), curveDat(n).vecStepSize_cent, ...
  [ curveDat(n).plot_markerStyle, curveDat(n).plot_lineStyle], ...
  'linewidth', curveDat(n).plot_lineWidth, ...
  'color', curveDat(n).plot_color, ...
  'markersize', curveDat(n).plot_markerSize );
hold on;
loglog( ...
  [ 1, curveDat(n).numPts-1 ], curveDat(n).vecStepSize_cent([1,end]), ...
  curveDat(n).plot_markerStyle, ...
  'linewidth', curveDat(n).plot_bigLineWidth, ...
  'color', curveDat(n).plot_color, ...
  'markersize', curveDat(n).plot_bigMarkerSize );
for n=2:numCurves
	if ( 1 == curveDat(n).numPts )
		continue;
	end
	loglog( ...
	  (1:curveDat(n).numPts-1), curveDat(n).vecStepSize_cent, ...
	  [ curveDat(n).plot_markerStyle, curveDat(n).plot_lineStyle], ...
	  'linewidth', curveDat(n).plot_lineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_markerSize );
	loglog( ...
	  [ 1, curveDat(n).numPts-1 ], curveDat(n).vecStepSize_cent([1,end]), ...
	  curveDat(n).plot_markerStyle, ...
	  'linewidth', curveDat(n).plot_bigLineWidth, ...
	  'color', curveDat(n).plot_color, ...
	  'markersize', curveDat(n).plot_bigMarkerSize );
end
hold off;
xlabel( "Step index" )
ylabel( "Step size" );
title( "Step size vs Step index" );
grid on;
%
msg( thisFile, __LINE__, sprintf( "Drawing graphs took %0.3fs.", time()-vizTime0 ) );
%
thisFile = "RETURN FROM xviz";
return;
