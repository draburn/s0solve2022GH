if ( isempty(vecXBestPrev) )
	msg( __FILE__, __LINE__, sprintf( ...
	  "  %8s, %4s ( %4s, %4s, %4s ); %3s / %4s, %8s, %8s;  %8s,  %8s;  %8s, %9s;  %s", ...
	  "time", ...
	  "iter", ...
	  "good", ...
	  "bad", ...
	  "horr", ...
	  "szK", ...
	  "szR", ...
	  "btCf", ...
	  "|deltaX|", ...
	  "fBest", ...
	  "fB fall", ...
	  "|gBest|", ...
	  "|gB|fall", ...
	  "fevalCount" ) );
	  %
	msg( __FILE__, __LINE__, sprintf( ...
	  "  %8.2e, %4d ( %4d, %4d, %4d ); %3d / %4d, %8.2e, %8.2e;  %8.2e,  %8.2e;  %8.2e, %9.2e;  %d", ...
	  time()-startTime, ...
	  iterCount, ...
	  trialCount_good, ...
	  trialCount_bad, ...
	  trialCount_horrible, ...
	  sizeKMostRecent, ...
	  size(matX,2), ...
	  stepBTFactor, ...
	  0.0, ... % norm(vecXBestPrev - vecXBest)
	  fBest, ...
	  0.0, ... % fBestPrev - fBest
	  norm(vecGBest), ...
	  0.0, ... % norm(vecGBestPrev) - norm(vecGBest)
	  fevalCount ) );
else
	msg( __FILE__, __LINE__, sprintf( ...
	  "  %8.2e, %4d ( %4d, %4d, %4d ); %3d / %4d, %8.2e, %8.2e;  %8.2e,  %8.2e;  %8.2e, %9.2e;  %d", ...
	  time()-startTime, ...
	  iterCount, ...
	  trialCount_good, ...
	  trialCount_bad, ...
	  trialCount_horrible, ...
	  sizeKMostRecent, ...
	  size(matX,2), ...
	  stepBTFactor, ...
	  norm(vecDelta), ...
	  fBest, ...
	  fBestPrev - fBest, ...
	  norm(vecGBest), ...
	  norm(vecGBestPrev) - norm(vecGBest), ...
	  fevalCount ) );
	
endif
